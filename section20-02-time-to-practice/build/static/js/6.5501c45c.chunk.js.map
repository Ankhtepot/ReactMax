{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/UI/Card.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,mBCArID,EAAOC,QAAU,CAAC,KAAO,qB,2GCKVC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,OCuD/BC,EAnDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACI,qCACE,cAAC,IAAD,CAAQC,KAAMF,EAAYG,QAAS,SAACC,GAAD,MAAc,yEACjD,cAAC,EAAD,UACA,uBAAMC,QARa,WACrBJ,GAAc,IAOqBV,UAAWC,IAAQc,KAAMC,SAvBhE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe5C,UACGvB,EAAM2B,WACH,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIN,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QA5BlB,WACE1B,GAAc,IA2BkCV,UAAU,MAAlD,kC,gBCrBGqC,UAtBf,SAAkBtC,GACd,IAAMuC,EAAUC,cAChB,EAA8BC,YAAQC,KAA/BC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAapB,OAXAC,qBAAU,WACS,cAAXD,GACAL,EAAQO,KAAK,aAElB,CAACF,EAAQL,IAQR,mCACI,cAAC,EAAD,CAAWZ,UAAsB,YAAXiB,EAAsBpB,WAN5B,SAAAuB,GACpBJ,EAAYI","file":"static/js/6.5501c45c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3q3Xq\",\"loading\":\"QuoteForm_loading__ivz8i\",\"control\":\"QuoteForm_control__1jAZF\",\"actions\":\"QuoteForm_actions__dP74V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3fiha\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import {useRef, useState} from 'react';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport Card from '../UI/Card';\nimport {Prompt} from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  function finishEnteringHandler() {\n    setIsEntering(false);\n  }\n\n  const formFocusHandler = () => {\n      setIsEntering(true);\n  };\n\n  return (\n      <>\n        <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? All your entered data will be lost.'}/>\n        <Card>\n        <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n              <div className={classes.loading}>\n                <LoadingSpinner/>\n              </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef}/>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card></>\n  );\n};\n\nexport default QuoteForm;\n","// import classes from './NewQuote.module.css';\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport {useHistory} from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport {addQuote} from '../lib/api';\r\nimport {useEffect} from 'react';\r\n\r\nfunction NewQuote(props) {\r\n    const history = useHistory();\r\n    const {sendRequest, status} = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n\r\n    const addQuoteHandler = quoteData => {\r\n        sendRequest(quoteData);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewQuote;"],"sourceRoot":""}